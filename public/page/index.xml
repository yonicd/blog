<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pages on Reproducible Random Thoughts</title>
    <link>/page/</link>
    <description>Recent content in Pages on Reproducible Random Thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>yonicd@gmail.com (Jonathan Sidi)</managingEditor>
    <webMaster>yonicd@gmail.com (Jonathan Sidi)</webMaster>
    
        <atom:link href="/page/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About me</title>
      <link>/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>yonicd@gmail.com (Jonathan Sidi)</author>
      <guid>/page/about/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Research scientist at &lt;a href=&#34;https://www.metrumrg.com/&#34;&gt;Metrum Research Group&lt;/a&gt;. Previously worked as statistician in the Research Department of the &lt;a href=&#34;http://www.boi.org.il/en/Pages/Default.aspx&#34;&gt;Bank of Israel&lt;/a&gt;, &lt;a href=&#34;http://www.matrix.co.il/en/Pages/default.aspx&#34;&gt;Matrix&lt;/a&gt; and a consultant to the &lt;a href=&#34;http://www.vanleer.org.il/en&#34;&gt;Van Leer Jerusalem Institute&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Education &lt;a href=&#34;http://en.stat.huji.ac.il/&#34;&gt;Department of Statistics&lt;/a&gt; at the &lt;a href=&#34;http://new.huji.ac.il/&#34;&gt;Hebrew University of Jerusalem&lt;/a&gt; (HUJI).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PhD in Statistics (2018)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disseration: Research of Signal Process Classification and Monitoring in a High Dimension Setting.&lt;/li&gt;
&lt;li&gt;Advisor: Prof. &lt;a href=&#34;http://www-personal.umich.edu/~yritov/jr.html&#34;&gt;Ya&amp;rsquo;acov Ritov&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Masters Degree in Statistics (2011)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dissertation: &lt;a href=&#34;http://www.boi.org.il/deptdata/mehkar/papers/dp1016e.pdf&#34;&gt;Nowcasting model for the Gross Domestic Product of Israel via regularized regression models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Advisor: Prof. &lt;a href=&#34;http://www-personal.umich.edu/~yritov/jr.html&#34;&gt;Ya&amp;rsquo;acov Ritov&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Bachelors Degree in &lt;a href=&#34;https://en.economics.huji.ac.il/&#34;&gt;Economics&lt;/a&gt; and &lt;a href=&#34;https://en.stat.huji.ac.il/&#34;&gt;Statistics&lt;/a&gt; (2008)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Stats research interests include high dimensional regression problems, where there are more covariates than observations, and combining surveillance techniques with copulas to track long tailed events.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Right now heavily focused on R, but equally lingual in SAS (incl IML), Matlab, STATA, EViews, and VB.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Enjoy integrating different languages with R like JavaScript and C++, to improve workflows.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Datasets</title>
      <link>/page/datasets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>yonicd@gmail.com (Jonathan Sidi)</author>
      <guid>/page/datasets/</guid>
      <description>&lt;p&gt;This page includes source data used in blog posts and packages.&lt;/p&gt;

&lt;p&gt;|Dataset|Object Type|Source|Description|
  |:&amp;ndash;:|:&amp;ndash;:|:&amp;ndash;:|:&amp;ndash;:|
  |superfundsite|tibble|&lt;a href=&#34;https://www.epa.gov/superfund/search-superfund-sites-where-you-live&#34;&gt;EPA&lt;/a&gt;|Superfund sites containing&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Waffle Heatmap</title>
      <link>/page/gh_traffic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>yonicd@gmail.com (Jonathan Sidi)</author>
      <guid>/page/gh_traffic/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://yonicd.netlify.com/img/github_traffic.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;how-we-got-this&#34;&gt;How we got this:&lt;/h1&gt;

&lt;h2 id=&#34;load-libraries&#34;&gt;Load libraries&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(RSelenium)
library(ggedit)
library(svglite)
library(viridis)
library(XML)
library(ggplot2)
library(plyr)
library(dplyr)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;set-github-credentials&#34;&gt;Set GitHub Credentials&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gh_user &amp;lt;- &#39;github user&#39;
gh_pass &amp;lt;- &#39;github pass&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;define-the-github-repos&#34;&gt;Define the GitHub repos&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gh_team &amp;lt;- rep(c(&#39;yonicd&#39;,&#39;metrumresearchgroup&#39;),c(5,7))

repos &amp;lt;- c(&#39;shinyHeatmaply&#39;,&#39;regexSelect&#39;,&#39;rpdf&#39;,&#39;gunflow&#39;,&#39;lmmen&#39;,
           &#39;ggedit&#39;,&#39;slickR&#39;,&#39;sinew&#39;,&#39;d3Tree&#39;,&#39;texPreview&#39;,&#39;shinyCanvas&#39;,
           &#39;jsTree&#39;)

repos &amp;lt;- file.path(gh_team,repos)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;retrieve-data-from-github-traffic-using-rselenium&#34;&gt;Retrieve data from GitHub traffic using RSelenium&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;github_traffic &amp;lt;- function(gh_user,gh_pass,repos){

rD &amp;lt;- rsDriver(verbose = FALSE)
remDr &amp;lt;- rD[[&amp;quot;client&amp;quot;]]

remDr$navigate(sprintf(&#39;https://github.com/%s/graphs/traffic&#39;,repos[1]))
webElem &amp;lt;- remDr$findElement(using = &#39;id&#39;, value = &amp;quot;login_field&amp;quot;)
webElem$setElementAttribute(attributeName = &#39;value&#39;,value = gh_user)
webElem &amp;lt;- remDr$findElement(using = &#39;id&#39;, value = &amp;quot;password&amp;quot;)
webElem$setElementAttribute(attributeName = &#39;value&#39;,value = gh_pass)
webElem=remDr$findElement(using = &#39;xpath&#39;,
&#39;//*[@id=&amp;quot;login&amp;quot;]/form/div[4]/input[3]&#39;)
webElem$clickElement()
Sys.sleep(1)

out &amp;lt;- plyr::llply(repos,function(repo){
  remDr$navigate(sprintf(&#39;https://github.com/%s/graphs/traffic&#39;,repo))
  Sys.sleep(1)
  out &amp;lt;- XML::htmlParse(remDr$getPageSource(),asText = TRUE)
  sapply(c(&#39;clones&#39;,&#39;visitors&#39;),function(type){
  XML::getNodeSet(out,
  sprintf(sprintf(&#39;//*[@id=&amp;quot;js-%s-graph&amp;quot;]/div/div[1]/svg/g/g&#39;,type)))
},simplify = FALSE,USE.NAMES = TRUE)
},.progress = &#39;text&#39;)

names(out) &amp;lt;- repos

remDr$close()
rD[[&amp;quot;server&amp;quot;]]$stop()

return(out)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;run-the-function&#34;&gt;Run the function&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_data_html &amp;lt;- github_traffic(gh_user=gh_user,
                            gh_pass=gh_pass,
                            repos=repos)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;failsafe-if-rselenium-crashes&#34;&gt;Failsafe if Rselenium Crashes&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# rD &amp;lt;- rsDriver(verbose = FALSE,port=4444L)
# remDr &amp;lt;- rD$client
# remDr$close()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;transform-d3-scales-to-r-scales&#34;&gt;Transform d3 scales to R scales&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_data &amp;lt;- plyr::ldply(plot_data_html,function(repo){
  plyr::mdply(names(repo),function(type){
    
    dat &amp;lt;- repo[[type]]
  
    if(is.null(dat)) return(NULL)
    
    yticks_total &amp;lt;- as.numeric(sapply(getNodeSet(dat[[2]],&#39;g&#39;),XML::xmlValue))
    y_mult_total &amp;lt;- as.numeric(gsub(&#39;[)]&#39;,&#39;&#39;,gsub(&#39;^(.*?),&#39;,&#39;&#39;,
    xmlAttrs(tail(getNodeSet(dat[[2]],&#39;g&#39;),1)[[1]])[2])))
    
    yticks_unique &amp;lt;- as.numeric(sapply(getNodeSet(dat[[5]],&#39;g&#39;),XML::xmlValue))
    y_mult_unique &amp;lt;- as.numeric(gsub(&#39;[)]&#39;,&#39;&#39;,gsub(&#39;^(.*?),&#39;,&#39;&#39;,
    xmlAttrs(tail(getNodeSet(dat[[5]],&#39;g&#39;),1)[[1]])[2])))
    
    
    x &amp;lt;- data.frame(type=type,
                    date = as.Date(sapply(getNodeSet(dat[[1]],&#39;g&#39;),XML::xmlValue),format = &#39;%m/%d&#39;),
                    total = as.numeric(sapply(getNodeSet(dat[[3]],&#39;circle&#39;),XML::xmlGetAttr,name = &#39;cy&#39;)),
                    unique = as.numeric(sapply(getNodeSet(dat[[4]],&#39;circle&#39;),XML::xmlGetAttr,name = &#39;cy&#39;)))

    x$total &amp;lt;- scales::rescale(x$total,
    rev(range(yticks_total))/((193-y_mult_total)/193))
    
    x$unique &amp;lt;- scales::rescale(x$unique,
    rev(range(yticks_unique))/((193-y_mult_unique)/193))
    
    x%&amp;gt;%reshape2::melt(.,c(&#39;type&#39;,&#39;date&#39;),variable.name=c(&#39;metric&#39;))
  })
},.id=&#39;repo&#39;)%&amp;gt;%select(-X1)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;save-file-to-disk-as-rds&#34;&gt;Save file to disk as RDS&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;saveRDS(plot_data,file = sprintf(&#39;github_traffic/data/%s_gh_traffic.rds&#39;,
                                 format(Sys.time(),format = &#39;%Y%m%d_%H%M&#39;)))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;read-in-all-historical-data&#34;&gt;Read in all historical data&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;myfile &amp;lt;- list.files(&#39;github_traffic/data&#39;,full.names = TRUE)

plot_data_df &amp;lt;- plyr::mdply(myfile,readRDS)

levels(plot_data_df$X1) &amp;lt;- gsub(&#39;_gh(.*?)$&#39;,&#39;&#39;,basename(myfile))

names(plot_data_df)[1] &amp;lt;- &#39;fetch_date&#39;

plot_data_df &amp;lt;- plot_data_df%&amp;gt;%
  group_by(repo,type,date,metric)%&amp;gt;%
  do(.,tail(.,1))%&amp;gt;%
  ungroup()%&amp;gt;%
  mutate(repo=gsub(&#39;^(.*?)/&#39;,&#39;&#39;,repo),
         val=ceiling(value))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-waffle-heatmap&#34;&gt;Create waffle heatmap&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_list &amp;lt;- plyr::dlply(plot_data_df,c(&#39;type&#39;),.fun = function(dat){
 p &amp;lt;- dat%&amp;gt;%
    ggplot(aes(x=date,
               y=repo,
               fill=val))+
    geom_tile(colour=&#39;white&#39;,width=.95)+
    geom_hline(yintercept = c(0,(1:length(unique(dat$repo)))+0.5),colour=&#39;grey90&#39;)+
    scale_fill_viridis(name=&#39;Count&#39;)+
    facet_grid(.~metric)+
    # uncomment if you want every date on x-axis
    # scale_x_date(date_breaks = &amp;quot;1 day&amp;quot;,date_labels = &amp;quot;%m/%d&amp;quot;)+
    theme_minimal()+
    theme(panel.grid.major  = element_blank(),
          axis.text.x = element_text(angle=90),
          panel.grid.minor = element_blank(),
          axis.title = element_blank())
 
 if(dat$type[1] ==&#39;clones&#39;){
   p &amp;lt;- p +
     labs(title=sprintf(&#39;GitHub Team: %s | %s&#39;,
     paste0(unique(dat$team),collapse = &#39;,&#39;),Sys.time()),
          subtitle=&#39;Clones&#39;)
 }else{
   p &amp;lt;- p +
     labs(subtitle=&#39;Visitors&#39;)
 }
 
 p
})
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;save-to-disk&#34;&gt;Save to disk&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pl &amp;lt;- ggedit::as.gglist(plot_list)
svglite(file.path(getwd(),&#39;public/img/github_traffic.svg&#39;),standalone = TRUE)
print(pl,plot.layout=list(list(rows=1,cols=1:2),list(rows=2,cols=1:2)))
dev.off()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://yonicd.netlify.com/img/github_traffic.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/page/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>yonicd@gmail.com (Jonathan Sidi)</author>
      <guid>/page/projects/</guid>
      <description>&lt;p&gt;This is a list of R packages that have been published on CRAN and/or are still being developed on Github. Many of the projects are part of &lt;a href=&#34;https://www.metrumrg.com/try-open-source-tools/&#34;&gt;open tools&lt;/a&gt; developed at Metrum Research Group.&lt;/p&gt;

&lt;!-- https://img.shields.io/badge/METRUM-opentools-brightgreen.svg?link=https://www.metrumrg.com/&amp;link=https://www.metrumrg.com/open-science/ --&gt;

&lt;p&gt;The icons at the end of each description show where the project is maintained and links are attached to each one to take you to the relevant page.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Metrum&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Github&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;CRAN&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;bl.ocks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://cran.r-project.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/CRAN--blue.svg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://bl.ocks.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/d3js.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;(Not in any logical order, just what came to mind when I wrote this&amp;hellip;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Reproduciblity&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ggedit&lt;/strong&gt; : Interactively edit ggplot2 layer and theme aesthetics definitions.&lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/metrumresearchgroup/ggedit&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://cran.r-project.org/package=ggedit&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/ggedit?color=blue&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/ggedit&#34; alt=&#34;downloads&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;sinew&lt;/strong&gt; : Create roxygen2 skeleton populated with information scraped from the within the function script. Also creates field entries for imports in the DESCRIPTION and import in the NAMESPACE files. Can be run from the R console or through the RStudio addin menu. &lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/metrumresearchgroup/sinew&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://cran.r-project.org/package=sinew&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/sinew?color=blue&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/sinew&#34; alt=&#34;downloads&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;texPreview&lt;/strong&gt; : Compile and preview snippets of LaTeX. Can be used directly from the R console, from RStudio, in Shiny apps and R Markdown documents. Must have pdflatex or xelatex or lualatex in PATH. &lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/metrumresearchgroup/texPreview&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://cran.r-project.org/package=texPreview&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/texPreview?color=blue&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/texPreview&#34; alt=&#34;downloads&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;gdigest&lt;/strong&gt; : Wrapper for memoise that lets users cache R objects on a remote repository. Works for objects created in console and Shiny. This is meant for multiple users to share cache via a repository, and increase efficiency of shiny apps that have heavy simulations.&lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/yonicd/gdigest&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;vcs&lt;/strong&gt; : Managing, inspecting and sourcing remote repositories such as github, bitbucket and subversion.&lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/metrumresearchgroup/vcs&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Shiny Apps, Modules and Gadgets&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;regexSelect&lt;/strong&gt; : R package to enable regular expression searches within a shiny selectize object. &lt;a href=&#34;https://github.com/yonicd/regexSelect&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://cran.r-project.org/package=regexSelect&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/regexSelect?color=blue&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/regexSelect&#34; alt=&#34;downloads&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;shinyHeatmaply&lt;/strong&gt; : Access functionality of the &lt;a href=&#34;https://github.com/talgalili/heatmaply&#34;&gt;heatmaply&lt;/a&gt; package through Shiny application and Shiny gadget. &lt;a href=&#34;https://github.com/yonicd/shinyHeatmaply&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=shinyHeatmaply&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/shinyHeatmaply?color=blue&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt; &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/shinyHeatmaply&#34; alt=&#34;downloads&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Htmlwidgets&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;slickR&lt;/strong&gt; : Create and customize interactive carousels using the Slick JavaScript library and the htmlwidgets package. The carousels can contain plots produced in R, images, iframes, videos and other htmlwidgets. These carousels can be used directly from the R console, from RStudio, in Shiny apps and R Markdown documents. &lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/metrumresearchgroup/slickR&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://cran.r-project.org/package=slickR&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/slickR?color=blue&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt; &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/slickR&#34; alt=&#34;downloads&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;jsTree&lt;/strong&gt; : Create and customize interactive trees using the jQuery jsTree plugin library and the htmlwidgets package. These trees can be used directly from the R console, from RStudio, in Shiny apps and R Markdown documents.&lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/metrumresearchgroup/jsTree&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://cran.r-project.org/package=jsTree&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/jsTree?color=blue&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt; &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/jsTree&#34; alt=&#34;downloads&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;d3Tree&lt;/strong&gt; : Create and customize interactive collapsible D3 trees using the D3 JavaScript library and the htmlwidgets package. These trees can be used directly from the R console, from RStudio, in Shiny apps and R Markdown documents. When in Shiny the tree layout is observed by the server and can be used as a reactive filter of structured data. &lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/metrumresearchgroup/d3Tree&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://cran.r-project.org/package=d3Tree&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/d3Tree?color=blue&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/d3Tree&#34; alt=&#34;downloads&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;shinyCanvas&lt;/strong&gt; : Htmlwidget that binds a fork of &lt;a href=&#34;https://bl.ocks.org/mbostock/4342190&#34;&gt;Spline Editor&lt;/a&gt; by Mike Bostock to create an observable object in Shiny. &lt;a href=&#34;https://www.metrumrg.com/open-science&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/mrgiconnew.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/metrumresearchgroup/shinyCanvas&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://bl.ocks.org/yonicd/4bc59fca901388ebe4905bdb19af1567&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/d3js.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;rpdf&lt;/strong&gt; : View PDFs from remote locations directly in R using the &lt;a href=&#34;https://mozilla.github.io/pdf.js/&#34;&gt;Mozilla pdf JavaScript library&lt;/a&gt; and the htmlwidgets package. The viewer can be called directly from the R console, from RStudio, in Shiny apps and R Markdown documents.&lt;a href=&#34;https://github.com/yonicd/rpdf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Stats&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lmmen&lt;/strong&gt; : R package that solves the linear mixed model elastic net. &lt;a href=&#34;https://github.com/yonicd/lmmen&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://cran.r-project.org/package=lmmen&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/lmmen?color=blue&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/lmmen&#34; alt=&#34;downloads&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Random thoughts that weren&amp;rsquo;t packaged, but are still useful.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Elections&lt;/strong&gt; : Real time tracker and analysis of 2016 USA Elections &lt;a href=&#34;https://github.com/yonicd/Elections&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;CIMDO&lt;/strong&gt; : Shiny Dashboard for the IMF CIMDO model. &lt;a href=&#34;https://github.com/yonicd/CIMDO&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;supermarketprices&lt;/strong&gt; : Read daily suprmarket data in all israel stores. &lt;a href=&#34;https://github.com/yonicd/supermarketprices&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;taseR&lt;/strong&gt; : API to read data from Tel Aviv Stock Exchange (TASE) website to R. &lt;a href=&#34;https://github.com/yonicd/taseR&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonicd/yonicd.github.io/master/img/ghicon.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>